// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.SuperLottoUserPick", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("FifthPick")
                        .HasColumnType("int");

                    b.Property<int>("FirstPick")
                        .HasColumnType("int");

                    b.Property<int>("FourthPick")
                        .HasColumnType("int");

                    b.Property<int>("MegaPick")
                        .HasColumnType("int");

                    b.Property<string>("RowCheckSum")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasComputedColumnSql("([LottoChecker].[SuperLottoUserPicksRowCheckSum]([UserId],[FirstPick],[SecondPick],[ThirdPick],[FourthPick],[FifthPick],[MegaPick]))", false);

                    b.Property<int>("SecondPick")
                        .HasColumnType("int");

                    b.Property<int>("ThirdPick")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RowCheckSum" }, "UC_LottoChecker_SuperLottoUserPicks_RowCheckSum")
                        .IsUnique()
                        .HasFilter("[RowCheckSum] IS NOT NULL");

                    b.ToTable("SuperLottoUserPicks", "LottoChecker");
                });

            modelBuilder.Entity("API.Models.SuperLottoWinningNumber", b =>
                {
                    b.Property<long>("DrawNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("DrawDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FifthPick")
                        .HasColumnType("int");

                    b.Property<int>("FirstPick")
                        .HasColumnType("int");

                    b.Property<int>("FourthPick")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber1")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber2")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber3")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber4")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber5")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumberMega")
                        .HasColumnType("int");

                    b.Property<int>("MegaPick")
                        .HasColumnType("int");

                    b.Property<long>("PrizeAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("SecondPick")
                        .HasColumnType("int");

                    b.Property<int>("ThirdPick")
                        .HasColumnType("int");

                    b.HasKey("DrawNumber");

                    b.ToTable("SuperLottoWinningNumbers");
                });

            modelBuilder.Entity("API.Models.SuperLottoWinningNumberDTO", b =>
                {
                    b.Property<string>("DrawDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DrawNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("FifthPick")
                        .HasColumnType("int");

                    b.Property<int>("FirstPick")
                        .HasColumnType("int");

                    b.Property<int>("FourthPick")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber1")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber2")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber3")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber4")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumber5")
                        .HasColumnType("int");

                    b.Property<int>("MatchedNumberMega")
                        .HasColumnType("int");

                    b.Property<int>("MegaPick")
                        .HasColumnType("int");

                    b.Property<long>("PrizeAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("SecondPick")
                        .HasColumnType("int");

                    b.Property<int>("ThirdPick")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
